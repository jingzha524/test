{"version":3,"sources":["components/USMap.js","components/HEProvider.js","stitch/app.js","stitch/authentication.js","components/StitchAuth.js","components/App.js","index.js"],"names":["colorPalette","Test_region","props","useState","colorScale","setColorScale","data","setData","regions","setRegions","metric","useEffect","fetch","then","res","json","x","cs","scaleQuantile","domain","_","map","filter","d","k","regionCode","length","range","scaleMap","each","Container","style","marginTop","minWidth","Grid","Column","projection","data-tip","data-for","geography","geographies","geo","key","rsmKey","default","stroke","strokeWidth","outline","pressed","onMouseEnter","properties","fill","id","backgroundColor","Row","domainPadding","width","height","y","Table","celled","Header","HeaderCell","Body","Cell","Label","ribbon","Loader","active","inline","HEContext","React","createContext","HEProvider","selectedTable","selectedVariable","selectedCounty","fetchedData","pageState","setPageState","handlePageStateChange","doc","pageInfo","useMemo","actions","Provider","value","children","app","Stitch","hasAppClient","getAppClient","initializeAppClient","loginAnonymous","credential","AnonymousCredential","auth","loginWithCredential","getCurrentUser","isLoggedIn","user","logoutCurrentUser","logoutUserWithId","StitchAuthContext","StitchAuthProvider","currentUser","authState","setAuthState","handleAnonymousLogin","a","loggedInUser","handleLogout","console","log","authInfo","App","AppUI","context","useContext","Error","useStitchAuth","path","to","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.eec93155.chunk.js","sourcesContent":["import { Container, Grid,Table, Header,Label, Menu,  Loader, Icon} from 'semantic-ui-react'\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { scaleQuantile } from \"d3-scale\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  VictoryChart,\r\n  VictoryBoxPlot,\r\n  VictoryTooltip,\r\n  VictoryVoronoiContainer,\r\n  VictoryContainer,\r\n  VictoryGroup,\r\n  VictoryBar,\r\n  VictoryTheme,\r\n  VictoryAxis,\r\n  VictoryLegend,\r\n  VictoryLine,\r\n  VictoryLabel,\r\n  VictoryScatter,\r\n  VictoryPie\r\n} from \"victory\";\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\n\r\n// import allStates from \"./data/allstates.json\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/JZCS2018/ga_county_zipcode_map/master/county_topo/region_us.json\";\r\n\r\nconst colorPalette = [\r\n  \"#e1dce2\",\r\n  \"#d3b6cd\",\r\n  \"#bf88b5\",\r\n  \"#af5194\",\r\n  \"#99528c\",\r\n  \"#633c70\"\r\n];\r\n\r\nexport default function Test_region(props) {\r\n  const [colorScale, setColorScale] = useState();\r\n  const [data, setData] = useState();\r\n  const [regions, setRegions] = useState('');\r\n  const countyColor = \"#f2a900\";\r\n\r\n  const metric = \"Delta_B.1.617.2\";\r\n\r\n  useEffect(() => {\r\n    fetch(\"/data/static.json\")\r\n      .then(res => res.json())\r\n      .then(x => {\r\n        setData(x);\r\n        const cs = scaleQuantile()\r\n          .domain(\r\n            _.map(\r\n              _.filter(\r\n                _.map(x, (d, k) => {\r\n                  d.regionCode = k;\r\n                  return d;\r\n                }),\r\n                (d) => d[metric] > 0 && d.regionCode.length > 0\r\n              ),\r\n              (d) => d[metric]\r\n            )\r\n          )\r\n          .range(colorPalette);\r\n\r\n        let scaleMap = {};\r\n        _.each(x, (d) => {\r\n          if (d[metric] >= 0) {\r\n            scaleMap[d[\"regionCode\"]] = cs(d[metric]);\r\n          }\r\n        });\r\n\r\n        setColorScale(scaleMap);\r\n        // console.log(scaleMap);\r\n      });\r\n  }, []);\r\n  if (data) {\r\n    return (\r\n      <div>\r\n      <Container style={{marginTop: '8em', minWidth: '1260px'}}>\r\n      <Grid>     \r\n      <Grid.Column> \r\n      <ComposableMap  projection=\"geoAlbersUsa\">\r\n        <Geographies data-tip = 'map' data-for='map' geography={geoUrl}>\r\n          {({ geographies }) => (geographies.map(geo =>\r\n            <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                style={{\r\n                  default: {\r\n                      stroke: \"#607D8B\",\r\n                      strokeWidth: 0.95,\r\n                      outline: \"none\",\r\n                  },\r\n                  pressed: {\r\n                      outline: \"none\",}\r\n              }}\r\n              onMouseEnter={() => {\r\n                setRegions(geo.properties.regionCode);\r\n                // console.log(colorScale[\"1\"]);\r\n                // console.log(regions);\r\n                // console.log(geo.properties.regionCode)\r\n              }}\r\n                    fill={\r\n                    (regions === geo.properties.regionCode)\r\n                      ? countyColor\r\n                      : colorScale[geo.properties.regionCode]\r\n                        \r\n                      }\r\n                />     \r\n            \r\n          ))}\r\n        </Geographies>\r\n      </ComposableMap>\r\n      </Grid.Column>\r\n      </Grid>\r\n      </Container>\r\n      <ReactTooltip id='map'backgroundColor='white'><Grid>\r\n                            <Grid.Row>\r\n                            <VictoryChart domainPadding={20}>\r\n                            <VictoryBoxPlot\r\n                              // boxWidth={5}\r\n                              width={40} height={40}\r\n\r\n                              data={[\r\n                                { x: 1, y: [1, 2, 3, 5] },\r\n                                { x: 2, y: [3, 2, 8, 10] },\r\n                                { x: 3, y: [2, 8, 6, 5] },\r\n                                { x: 4, y: [1, 3, 2, 9] }\r\n                              ]}\r\n                            />\r\n                            </VictoryChart>\r\n                            </Grid.Row>\r\n                            <Grid.Row>\r\n                            <Table celled>\r\n    <Table.Header>\r\n      <Table.Row>\r\n        <Table.HeaderCell>Header</Table.HeaderCell>\r\n        <Table.HeaderCell>Header</Table.HeaderCell>\r\n        <Table.HeaderCell>Header</Table.HeaderCell>\r\n      </Table.Row>\r\n    </Table.Header>\r\n\r\n    <Table.Body>\r\n      <Table.Row>\r\n        <Table.Cell>\r\n          <Label ribbon>First</Label>\r\n        </Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Cell</Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n      </Table.Row>\r\n      <Table.Row>\r\n        <Table.Cell>Cell</Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n        <Table.Cell>Cell</Table.Cell>\r\n      </Table.Row>\r\n    </Table.Body>\r\n  </Table>\r\n  </Grid.Row>      \r\n  </Grid>   \r\n                            \r\n                            </ReactTooltip>\r\n                            </div>\r\n    );\r\n    \r\n  }\r\n  else {\r\n            return <Loader active inline='centered' />\r\n        }\r\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst HEContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useHE() {\n  const context = React.useContext(HEContext);\n  if (!context) {\n    throw new Error(`useHE must be used within a GADMProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function HEProvider(props) {\n\n  const [pageState, setPageState] = React.useState({\n    selectedTable: {},\n    selectedVariable: {},\n    selectedCounty: {},\n    fetchedData:[],\n  });\n\n  const handlePageStateChange = (doc) => {\n    setPageState({...pageState, ...doc});\n  };\n\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const pageInfo = React.useMemo(\n    () => {\n      const { selectedTable, selectedVariable, selectedCounty, fetchedData } = pageState;\n      const value = {\n        selectedTable,\n        selectedVariable,\n        selectedCounty,\n        fetchedData,\n        actions: { handlePageStateChange },\n      };\n      return value;\n    },\n    [pageState],\n  );\n  return (\n    <HEContext.Provider value={pageInfo}>\n      {props.children}\n    </HEContext.Provider>\n  );\n}\nHEProvider.propTypes = {\n  children: PropTypes.element,\n};","import { Stitch } from \"mongodb-stitch-browser-sdk\";\n\n// TODO: Add your Stitch app's App ID\nconst APP_ID = \"test-owzgf\";\n\n// TODO: Initialize the app client\nconst app = Stitch.hasAppClient(APP_ID)\n  ? Stitch.getAppClient(APP_ID)\n  : Stitch.initializeAppClient(APP_ID);\n\nexport { app };\n","import { \n  AnonymousCredential\n} from \"mongodb-stitch-browser-sdk\";\nimport { app } from \"./app.js\";\n\nexport function loginAnonymous() {\n  // Allow users to log in anonymously\n  const credential = new AnonymousCredential();\n  return app.auth.loginWithCredential(credential);\n}\n\nexport function hasLoggedInUser() {\n  // Check if there is currently a logged in user\n  return app.auth.isLoggedIn;\n}\n\nexport function getCurrentUser() {\n  // Return the user object of the currently logged in user\n  return app.auth.isLoggedIn? app.auth.user : null;\n}\n\nexport function logoutCurrentUser() {\n  // Logout the currently logged in user\n  const user = getCurrentUser();\n  return app.auth.logoutUserWithId(user.id);\n}\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  hasLoggedInUser,\n  logoutCurrentUser,\n  getCurrentUser,\n  loginAnonymous,\n\n} from \"./../stitch/authentication\";\n\n\n// Create a React Context that lets us expose and access auth state\n// without passing props through many levels of the component tree\nconst StitchAuthContext = React.createContext();\n\n// Create a React Hook that lets us get data from our auth context\nexport function useStitchAuth() {\n  const context = React.useContext(StitchAuthContext);\n  if (!context) {\n    throw new Error(`useStitchAuth must be used within a StitchAuthProvider`);\n  }\n  return context;\n}\n\n// Create a component that controls auth state and exposes it via\n// the React Context we created.\nexport function StitchAuthProvider(props) {\n\n  const [authState, setAuthState] = React.useState({\n    isLoggedIn: hasLoggedInUser(),\n    currentUser: getCurrentUser(),\n  });\n\n  // Authentication Actions\n  const handleAnonymousLogin = async () => {\n    const { isLoggedIn } = authState;\n    if (!isLoggedIn) {\n      const loggedInUser = await loginAnonymous();\n      setAuthState({\n        ...authState,\n        isLoggedIn: true,\n        currentUser: loggedInUser,\n      });\n    }\n  };\n  // Authentication Actions\n  const handleLogout = async () => {\n    const { isLoggedIn } = authState;\n    if (isLoggedIn) {\n      await logoutCurrentUser();\n      setAuthState({\n        ...authState,\n        isLoggedIn: false,\n        currentUser: null,\n      });\n    } else {\n      console.log(`can't handleLogout when no user is logged in`);\n    }\n  };\n\n  // We useMemo to improve performance by eliminating some re-renders\n  const authInfo = React.useMemo(\n    () => {\n      const { isLoggedIn, currentUser} = authState;\n      const value = {\n        isLoggedIn,\n        currentUser,\n        actions: { \n                  handleAnonymousLogin, handleLogout,\n                },\n      };\n      return value;\n    },\n    [authState.isLoggedIn],\n  );\n  return (\n    <StitchAuthContext.Provider value={authInfo}>\n      {props.children}\n    </StitchAuthContext.Provider>\n  );\n}\nStitchAuthProvider.propTypes = {\n  children: PropTypes.element,\n};\n","// React\r\nimport React, {useEffect}from \"react\";\r\n// Components & Hooks\r\nimport Test_region from \"./USMap\";\r\n\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport {HEProvider} from './HEProvider';\r\n\r\n// import Test_region from \"./Test_region\";\r\n\r\nimport { StitchAuthProvider, useStitchAuth} from \"./StitchAuth\";\r\n\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nApp.propTypes = {};\r\nexport default function App() {\r\n\r\n  return (\r\n    <StitchAuthProvider>\r\n      <AppUI />\r\n    </StitchAuthProvider>\r\n  );\r\n}\r\n\r\nAppUI.propTypes = {};\r\nfunction AppUI() {\r\n  const {\r\n    isLoggedIn,\r\n    actions: { handleLogout, handleAnonymousLogin },\r\n  } = useStitchAuth();\r\n\r\n  useEffect(()=>{\r\n    handleAnonymousLogin();\r\n  });\r\n\r\n  return (\r\n    <HEProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route path='/'>\r\n            <Test_region />\r\n          </Route>\r\n          <Route path=\"*\">\r\n            <Redirect to='/'/>\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n      </HEProvider>\r\n  );\r\n}\r\n\r\n","import 'react-app-polyfill/ie9';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}